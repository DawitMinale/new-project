class Node:
    def __init__(self,data):
        self.data=data
        self.ref=None
class LinkedList:
    def __init__(self):
        self.head=None
    def addFirst(self,data):
        newNode=Node(data)
        newNode.ref=self.head
        self.head=newNode
    def addEnd(self,data):
        newNode=Node(data)
        n=self.head
        while(n.ref is not None):
            n=n.ref
        n.ref=newNode
        newNode.ref=None
    def addAny(self,data,index):
        newNode=Node(data)
        
        count=0
        n=self.head
        while(n is not None):
            if(count==index-1):
                temp=n.ref
                n.ref=newNode
                newNode.ref=temp
                n.ref
            n=n.ref
            count+=1
    def deleteFirst(self):
        n=self.head
        self.head=n.ref
    def deleteEnd(self):
        n=self.head
        while(n.ref.ref is not None):
            n=n.ref
        n.ref=None
    def deleteAny(self,index):
        n=self.head
        count=0
        while( n is not None):
            
            if(count==index-1):
                temp=n.ref
                n.ref=temp.ref
            count+=1
            n=n.ref
      
        
             
            
        
    def print(self):
        n=self.head
        while(n is not None):
            print(str(n.data) ,end='')
            if(n.ref is not None):
                print('-->' ,end='')
                
            n=n.ref

            
l1= LinkedList()
l1.addFirst(6)
l1.addFirst(5)
l1.addFirst(4)
l1.addEnd(8)
l1.addEnd(2)
l1.addAny(1,2)

l1.deleteFirst()
l1.deleteEnd()
# l1.print()
l1.deleteAny(1)
l1.print()



        
            

    
